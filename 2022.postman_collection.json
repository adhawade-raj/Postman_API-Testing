{
	"info": {
		"_postman_id": "78517b1e-b1be-4d59-8202-0f5a72728dd1",
		"name": "2022",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21312396",
		"_collection_link": "https://crimson-comet-696927.postman.co/workspace/APITesting~677dc419-822f-465e-88e2-fc007fedd4f6/collection/21312396-78517b1e-b1be-4d59-8202-0f5a72728dd1?action=share&source=collection_link&creator=21312396"
	},
	"item": [
		{
			"name": "API Chaining",
			"item": [
				{
					"name": "ListUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonData=JSON.parse(responseBody)\r",
									"value = jsonData.data[0].first_name\r",
									"pm.globals.set(\"username\", \"value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateUser",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"{{username}}\",\r\n\"job\": \"zion resident\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authoriations",
			"item": [
				{
					"name": "BasicAuth",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "postman",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/basic-auth",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"basic-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Key Auth",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "in",
									"value": "query",
									"type": "string"
								},
								{
									"key": "value",
									"value": "fe9c5cddb7e01d747b4611c3fc9eaf2c",
									"type": "string"
								},
								{
									"key": "key",
									"value": "appid",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "api.openweathermap.org/data2.5/forecast/daily?q=Delhi&cnt=1",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"",
								"data2.5",
								"forecast",
								"daily"
							],
							"query": [
								{
									"key": "q",
									"value": "Delhi"
								},
								{
									"key": "cnt",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GitToken",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "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",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https:/api.github.com/user/repos",
							"host": [
								"https"
							],
							"port": "",
							"path": [
								"api.github.com",
								"user",
								"repos"
							]
						}
					},
					"response": []
				},
				{
					"name": "http://api.github.com/user/repos",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.github.com/user/repos",
							"protocol": "http",
							"host": [
								"api",
								"github",
								"com"
							],
							"path": [
								"user",
								"repos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Countries API",
			"item": [
				{
					"name": "Countries API india",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restcountries.com/v3.1/name/india",
							"protocol": "https",
							"host": [
								"restcountries",
								"com"
							],
							"path": [
								"v3.1",
								"name",
								"india"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://restcountries.com/v3.1/capital/delhi",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restcountries.com/v3.1/capital/delhi",
							"protocol": "https",
							"host": [
								"restcountries",
								"com"
							],
							"path": [
								"v3.1",
								"capital",
								"delhi"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data Driven Testing",
			"item": [
				{
					"name": "Create Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"validate status code\"]=responseCode.code==200;\r",
									"var response = JSON.parse(responseBody);\r",
									"tests[\"validate status mesg\"]=response.status=\"success\";\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\":\"{{name}}\",\r\n\"salary\" : \"{{salary}}\",\r\n\"age\" : \"{{age}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/create",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DemoRestAPIs",
			"item": [
				{
					"name": "Page2UserData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"validating status code\"]=responseCode.code ==200;   \r",
									"tests[\"validating Response Body\"] = responseBody.has(\"data\");\r",
									"\r",
									"var response =JSON.parse(responseBody);\r",
									"tests[\"page no\"]=response.page==2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UserResponse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = JSON.parse(responseBody);\r",
									"tests[\"verify first name\"] = response.data.first_name ==\"Janet\";\r",
									"tests[\"verify last name\"] = response.data.last_name ==\"Weaver\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostReq1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = JSON.parse(responseBody);\r",
									"tests[\"name\"]=response.name==\"morpheus\";\r",
									"tests[\"job\"]=response.job=\"leader\";\r",
									"\r",
									"tests[\"validating status code\"] = responseCode.code==\"201\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n\"name\" : \"morpheus\",\r\n\"job\" : \"leader\" \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginPageTests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"validating Token Response\"] = responseBody.has(\"token\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"eve123.holt@reqres.in\",\r\n\"password\": \"cityslicka\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginPageTests Negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"validating Token Response\"] = responseBody.has(\"token\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"email\": \"eve.holt@reqres.in\",\r\n\"password\": \"cityslicka\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EmpployeeAPIs",
			"item": [
				{
					"name": "EmployyeName_Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = JSON.parse(responseBody)\r",
									"tests[\"Emp Name\"]=response.data[2].employee_name ==\"Ashton Cox\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/employees",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSingle_Record_ofEmployee",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/employee/5",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"employee",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post New Emp record",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"test\", \"Salary\":\"123\", \"age\":\"23\"}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/create",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put request update data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\" : \"Dzmitry\",\r\n\"salary\" : 1200,\r\n\"age\" : 28,\r\n\"id\" : 500\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/update/20",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"update",
								"20"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete emp data",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://dummy.restapiexample.com/api/v1/delete/20",
							"protocol": "http",
							"host": [
								"dummy",
								"restapiexample",
								"com"
							],
							"path": [
								"api",
								"v1",
								"delete",
								"20"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FileUpload and DownLoad",
			"item": [
				{
					"name": "Single File Upload",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/E:/Sample For Selenium Prog.xlsx"
								}
							]
						},
						"url": {
							"raw": "https://localhost:8080/uploadFile",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"uploadFile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GoRestAPIs",
			"item": [
				{
					"name": "GoRestGET Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = JSON.parse(responseBody)\r",
									"tests[\"code\"] = responseCode.code=200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "PostReq",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = JSON.parse(responseBody)\r",
									"tests(\"test 123\") = response.name=\"Raj Adhawade\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 4d5ca2826ef627bc6b000b82bb7df8c26831266a1b936e701a3c06f3f1e9bf77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Raj Adhawade\",\r\n\"email\": \"Raj@hahn.org\",\r\n\"gender\": \"male\",\r\n\"status\": \"active\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var response = JSON.parse(responseBody)\r",
									"tests[\"Testing 1\"] = responseCode.code = 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer 4d5ca2826ef627bc6b000b82bb7df8c26831266a1b936e701a3c06f3f1e9bf77",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2574,\r\n    \"name\": \"Bhaaswar  DVM\",\r\n    \"email\": \"varman_dvm_bhaaswar@hudson.co\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users/2574",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users",
								"2574"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OrderOFExecution",
			"item": [
				{
					"name": "Sample_for Test execution Order",
					"item": [
						{
							"name": "TestExecution",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"console.log(\"this is Test level pre request-script....\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(\"this is Test level Test-script....\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users/2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"console.log(\"this is Folder level pre request-script....\")"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"console.log(\"this is Folder level Test-script....\")"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "PostmanScripting",
			"item": [
				{
					"name": "Scripting",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"userid\", 3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Single Assertion\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Multiple Assertion\r",
									"pm.test(\"validate multiple fields in response\", function()\r",
									"{\r",
									"    responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.data.id).to.eql(3);\r",
									"    pm.expect(responseJson.data.email).to.eql(\"emma.wong@reqres.in\");\r",
									" pm.expect(responseJson.data.first_name).to.eql(\"Emma\");\r",
									"pm.expect(responseJson.data.last_name).to.eql(\"Wong\");\r",
									"\r",
									"});\r",
									"\r",
									"// handling response that dont parse\r",
									"pm.test(\"Body contains string\", function() {\r",
									"    pm.expect(pm.response.text()).to.include(\"emma.wong@reqres.in\");\r",
									"});\r",
									"\r",
									"// status code being one of a set\r",
									"pm.test(\"Successful status code\", function() {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"// Testing header\r",
									"pm.test(\"content type header present\", function() {\r",
									"    pm.response.to.have.header(\"content-Type\");\r",
									"});\r",
									"\r",
									"// Testing header content value\r",
									"pm.test(\"content type value\", function() {\r",
									"    pm.expect(pm.response.headers.get(\"content-type\")).to.eql(\"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"// Response Time\r",
									"pm.test(\"Response time is less than 20 ms\", function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(35)\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/{{userid}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{userid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}