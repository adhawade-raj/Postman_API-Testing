{
	"info": {
		"_postman_id": "d031b616-bfd2-4693-a14d-4c4c05627d93",
		"name": "2024_V2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21312396",
		"_collection_link": "https://crimson-comet-696927.postman.co/workspace/APITesting~677dc419-822f-465e-88e2-fc007fedd4f6/collection/21312396-d031b616-bfd2-4693-a14d-4c4c05627d93?action=share&source=collection_link&creator=21312396"
	},
	"item": [
		{
			"name": "CURL",
			"item": [
				{
					"name": "https://restful-booker.herokuapp.com/auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://gorest.co.in/public/v2/users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 4d5ca2826ef627bc6b000b82bb7df8c26831266a1b936e701a3c06f3f1e9bf77"
							}
						],
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "https://gorest.co.in/public/v2/users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer 4d5ca2826ef627bc6b000b82bb7df8c26831266a1b936e701a3c06f3f1e9bf77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Tenali Ramakrishna\", \"gender\":\"male\", \"email\":\"tenali1.ramakrishna@15ce.com\", \"status\":\"active\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v2/users",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HttpBin.org",
			"item": [
				{
					"name": "GetUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://httpbin.org/get",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Raj\",\r\n    \"city\" : \"Pune\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://httpbin.org/post",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "RequestBody_FormData",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Name",
									"value": "Raj2",
									"type": "text"
								},
								{
									"key": "City",
									"value": "Pune",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://httpbin.org/post",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReqBody_PdfFile_FormData",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Name",
									"value": "Raj",
									"type": "text"
								},
								{
									"key": "City",
									"value": "Pune",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/LENOVO/Desktop/FormData.pdf"
								}
							]
						},
						"url": {
							"raw": "http://httpbin.org/post",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReqBody_formUrlEncoded",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "Name",
									"value": "Raj",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://httpbin.org/post",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "ReqBody_Binary",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "file",
							"file": {
								"src": "postman-cloud:///1ef102c3-b94d-45f0-88ad-a06906ff643f"
							}
						},
						"url": {
							"raw": "http://httpbin.org/post",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GoRest",
			"item": [
				{
					"name": "GET Method",
					"item": [
						{
							"name": "Get Specific",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Bearer",
										"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7027403",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7027403"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "EnvVariable_GetUser",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024377",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024377"
									]
								}
							},
							"response": []
						},
						{
							"name": "GlobalVariable_GetUser",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024396",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024396"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tests in Postman",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"check if response is having status code 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Julian\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify gender is male & name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.name).to.eql(\"Julian\");\r",
											"    pm.expect(jsonData.gender).to.eql(\"male\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenId}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024396",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024396"
									]
								}
							},
							"response": []
						},
						{
							"name": "Skip_Fail Test",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"check if response is not null\", function(){\r",
											"    pm.expect(pm.response.name).not.eql(null)\r",
											"});\r",
											"\r",
											"pm.test(\"check if test is getting failed\", function(){\r",
											"    pm.expect.fail();\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Bearer",
										"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7167435",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7167435"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"check if response is having status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								]
							}
						}
					]
				},
				{
					"name": "POST Method",
					"item": [
						{
							"name": "Create User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const temp = pm.variables.get(\"abc\")\r",
											"console.log(temp)"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{tokenId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"{{temp}}\",\r\n\"email\":\"{{$randomEmail}}\",\r\n\"gender\":\"male\",\r\n\"status\":\"active\"\r\n}"
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "EnvVariable_CreateUser",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{tokenId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"{{$randomFirstName}}\",\r\n\"email\":\"{{$randomEmail}}\",\r\n\"gender\":\"male\",\r\n\"status\":\"active\"\r\n}"
								},
								"url": {
									"raw": "{{baseURL}}/public/v2/users",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "GlobalVariable_CreateUser",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{tokenID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"{{$randomFirstName}}\",\r\n\"email\":\"{{$randomEmail}}\",\r\n\"gender\":\"male\",\r\n\"status\":\"active\"\r\n}"
								},
								"url": {
									"raw": "{{baseURL}}/public/v2/users",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"check if response is having status code 201\", function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.variables.set(\"abc\", \"xyz\")"
								]
							}
						}
					]
				},
				{
					"name": "PUT Method",
					"item": [
						{
							"name": "update user",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$randomFirstName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"gender\": \"male\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024377",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024377"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"check if response is having status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "DELETE Method",
					"item": [
						{
							"name": "Delete User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7024377",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024377"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"check if response is having status code 204\", function(){\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "ALL Combination",
					"item": [
						{
							"name": "Get Specific User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Bearer",
										"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7019963",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7019963"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Users",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"raj\",\r\n\"email\":\"raj2@gmail.com\",\r\n\"gender\":\"male\",\r\n\"status\":\"active\"\r\n}"
								},
								"url": {
									"raw": "https://gorest.co.in/public/v2/users",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ea94c395f5df75e2d78ea00a764aa9d6b96e055e9d8b38e0311178406a3c081c",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7019963",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7019963"
									]
								}
							},
							"response": []
						},
						{
							"name": "EnvVariable_GetUser",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024377",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024377"
									]
								}
							},
							"response": []
						},
						{
							"name": "EnvVariable_CreateUser",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{tokenID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"{{$randomFirstName}}\",\r\n\"email\":\"{{$randomEmail}}\",\r\n\"gender\":\"male\",\r\n\"status\":\"active\"\r\n}"
								},
								"url": {
									"raw": "{{baseURL}}/public/v2/users",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "GlobalVariable_GetUser",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenID}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024396",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024396"
									]
								}
							},
							"response": []
						},
						{
							"name": "GlobalVariable_CreateUser",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{tokenID}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"name\":\"{{$randomFirstName}}\",\r\n\"email\":\"{{$randomEmail}}\",\r\n\"gender\":\"male\",\r\n\"status\":\"active\"\r\n}"
								},
								"url": {
									"raw": "{{baseURL}}/public/v2/users",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Tests in Postaman",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"check if response is having status code 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Body matches string\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Julian\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify gender is male & name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.name).to.eql(\"Julian\");\r",
											"    pm.expect(jsonData.gender).to.eql(\"male\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenId}}"
									}
								],
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024396",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024396"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PATCH Method",
					"item": [
						{
							"name": "updateSingleEntity",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"gender\": \"female\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/public/v2/users/7024377",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7024377"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"pm.test(\"check if response is having status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "HEAD Method",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users/7027403",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users",
										"7027403"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"// pm.test(\"check if response is having status code 200\", function(){\r",
									"//     pm.response.to.have.status(200);\r",
									"// });"
								]
							}
						}
					]
				},
				{
					"name": "ChainScript",
					"item": [
						{
							"name": "1 Get Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const getResponse = pm.response.json();\r",
											"const userIds = getResponse.map(user => user.id);\r",
											"console.log(userIds);\r",
											"pm.variables.set(\"user_ids\", userIds);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://gorest.co.in/public/v2/users?perpage=10",
									"protocol": "https",
									"host": [
										"gorest",
										"co",
										"in"
									],
									"path": [
										"public",
										"v2",
										"users"
									],
									"query": [
										{
											"key": "perpage",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "2 Update User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const userIds = pm.variables.get(\"user_ids\");\r",
											"pm.variables.set(\"singleUserId\",userIds.shift());\r",
											"if(Array.isArray(userIds) && userIds.length > 0){\r",
											"    postman.setNextRequest(\"2 Update User\")\r",
											"}\r",
											"else{\r",
											"     postman.setNextRequest(null)\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Raj Automation\",\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/public/v2/users/{{singleUserId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"public",
										"v2",
										"users",
										"{{singleUserId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"if(pm.request.method=='GET'){\r",
							"    pm.test(\"Verify status code 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"}\r",
							"\r",
							"if(pm.request.method=='POST'){\r",
							"    pm.test(\"Verify status code 201\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"}\r",
							"\r",
							"if(pm.request.method=='PUT'){\r",
							"    pm.test(\"Verify status code 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"}\r",
							"\r",
							"if(pm.request.method=='DELETE'){\r",
							"    pm.test(\"Verify status code 204\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"}"
						]
					}
				}
			]
		},
		{
			"name": "ReqRes-HET_HEAD_OPTIONS",
			"item": [
				{
					"name": "Fetch User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Head Call",
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "OPTIONS",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRUD Workflow",
			"item": [
				{
					"name": "1 Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resData = pm.response.json();\r",
									"const userId = resData.id;\r",
									"console.log(\"User Id : \"+userId);\r",
									"\r",
									"pm.variables.set(\"userId\", userId)\r",
									"\r",
									"pm.test(\"Verify that status code is 201\", function(){\r",
									"    pm.response.to.have.status(201)\r",
									"})\r",
									"\r",
									"// to fetch request Body\r",
									"\r",
									"const requestBody = JSON.parse(pm.request.body)\r",
									"const name = requestBody.name\r",
									"const email = requestBody.email\r",
									"console.log(\"Name is : \" +name+ \"& Email is : \"+email)\r",
									"\r",
									"pm.variables.set(\"name\", name)\r",
									"pm.variables.set(\"email\", email)\r",
									"\r",
									"pm.test(\"verify name & email is correct\", function(){\r",
									"    pm.expect(resData.name).to.eql(name)\r",
									"    pm.expect(resData.email).to.eql(email)\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\":\"{{$randomFirstName}}\",\r\n\"email\":\"{{$randomEmail}}\",\r\n\"gender\":\"male\",\r\n\"status\":\"active\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/public/v2/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"public",
								"v2",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Get Same User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"To verifty response is 200\", function(){\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify name\", function(){\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(pm.variables.get(\"name\"))\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/public/v2/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verifty status code is 200\", function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"var resData = pm.response.json();\r",
									"pm.test(\"Verifty body status is inactive\", function(){\r",
									"    pm.expect(resData.status).to.eql(\"inactive\")\r",
									"})\r",
									"\r",
									"\r",
									"//fetch request body\r",
									"const requestBody = JSON.parse(pm.request.body)\r",
									"const requestStatus = requestBody.status;\r",
									"console.log(\"Request status in put body is : \"+requestStatus)\r",
									"\r",
									"pm.test(\"Verify status\", function(){\r",
									"    pm.expect(resData.status).to.eql(requestStatus)\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\" : \"inactive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/public/v2/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify status code is 204\", function(){\r",
									"    pm.response.to.have.status(204)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/public/v2/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Get user After Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"To verifty response is 404\", function(){\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"var resData = pm.response.json();\r",
									"pm.test(\"Verify user got deleted after get call\", function(){\r",
									"    pm.expect(resData.message).to.eql(\"Resource not found\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseURL}}/public/v2/users/{{userId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"public",
								"v2",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Restful-Booker",
			"item": [
				{
					"name": "1 Create Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/auth",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Get Bookings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/1",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseData = pm.response.json()\r",
									"const booking_Id = responseData.bookingid;\r",
									"console.log(\"Booking Id : \"+booking_Id)\r",
									"pm.variables.set(\"booking_Id\", booking_Id)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"Jim\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 Update Booking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url:'https://restful-booker.herokuapp.com/auth',\r",
									"    method:'POST',\r",
									"    header:{\r",
									"        'Content-Type' : 'application/json',\r",
									"    },\r",
									"    body:{\r",
									"        mode:'raw',\r",
									"        raw:JSON.stringify({\r",
									"            \"username\":\"admin\",\r",
									"            \"password\":\"password123\"\r",
									"        })\r",
									"    }\r",
									"}, function(err, response){\r",
									"    if(err){\r",
									"        console.log(err)\r",
									"        return;\r",
									"    }\r",
									"    else{\r",
									"        const authResponse = response.json();\r",
									"        console.log(authResponse)\r",
									"        const tokeId = authResponse.token;\r",
									"        console.log(\"Token Id--> \"+tokeId)\r",
									"        pm.variables.set(\"tokeId\", \"token=\"+tokeId)\r",
									"\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "{{tokeId}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"James\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{booking_Id}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{booking_Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Delete Boooking",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.sendRequest({\r",
									"    url:'https://restful-booker.herokuapp.com/auth',\r",
									"    method:'POST',\r",
									"    header:{\r",
									"        'Content-Type' : 'application/json',\r",
									"    },\r",
									"    body:{\r",
									"        mode:'raw',\r",
									"        raw:JSON.stringify({\r",
									"            \"username\":\"admin\",\r",
									"            \"password\":\"password123\"\r",
									"        })\r",
									"    }\r",
									"}, function(err, response){\r",
									"    if(err){\r",
									"        console.log(err)\r",
									"        return;\r",
									"    }\r",
									"    else{\r",
									"        const authResponse = response.json();\r",
									"        console.log(authResponse)\r",
									"        const tokeId = authResponse.token;\r",
									"        console.log(\"Token Id--> \"+tokeId)\r",
									"        pm.variables.set(\"tokeId\", \"token=\"+tokeId)\r",
									"\r",
									"    }\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "{{tokeId}}"
							}
						],
						"url": {
							"raw": "https://restful-booker.herokuapp.com/booking/{{booking_Id}}",
							"protocol": "https",
							"host": [
								"restful-booker",
								"herokuapp",
								"com"
							],
							"path": [
								"booking",
								"{{booking_Id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data-Driven-Test",
			"item": [
				{
					"name": "Create Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"requestjson\", JSON.stringify(pm.iterationData.toObject()));\r",
									"\r",
									"pm.test(\"validate the data\", function(){\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.json.name).to.eql(pm.iterationData.get(\"name\"));\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{requestjson}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://httpbin.org/post",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DataWith variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"validate the data\", function(){\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.json.name).to.eql(pm.iterationData.get(\"name\"));\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{name}}\",\r\n    \"city\":\"{{city}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://httpbin.org/post",
							"protocol": "http",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}